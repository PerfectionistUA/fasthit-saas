# .github/workflows/ci.yml
name: CI

on:
  push:
    branches: [main, feat/saas-core, feature/** ]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  laravel:
    runs-on: ubuntu-latest

    services:
      # Піднімаємо PostgreSQL як side-container
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: fast_hit
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: secret
        ports: ['5432:5432']
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      # ---------- PHP ----------
      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Set up PHP 8.3
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo_pgsql, intl, zip
          coverage: none

      - name: Install Composer deps
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      # ---------- Node ----------
      - name: Cache npm
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Install JS deps & build assets
        run: |
          npm ci --ignore-scripts
          npm run build

      # ---------- Laravel prep ----------
      - name: Copy .env & key
        run: |
          cp .env.example .env
          php artisan key:generate --ansi --no-interaction

      - name: Run migrations
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: fast_hit
          DB_USERNAME: postgres
          DB_PASSWORD: secret
        run: php artisan migrate --force --no-interaction

      # ---------- Tenant UUIDs setup ----------
      - name: Fill missing tenant UUIDs
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: fast_hit
          DB_USERNAME: postgres
          DB_PASSWORD: secret
        run: php artisan tenants:generate-uuids --no-interaction --quiet

      # ---------- Static analysis / style ----------
      - name: Pint (style lint)
        run: ./vendor/bin/pint --test

      # ---------- Tests ----------
      - name: PHPUnit
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: fast_hit
          DB_USERNAME: postgres
          DB_PASSWORD: secret
        run: php artisan test --parallel

      # ---------- Demo data ----------
      - name: Set up application DB
        env:
          DB_CONNECTION: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_DATABASE: fast_hit
          DB_USERNAME: postgres
          DB_PASSWORD: secret
          SEED_SUPER_ADMIN_EMAIL: ${{ secrets.SEED_SUPER_ADMIN_EMAIL }}
          SEED_SUPER_ADMIN_PASSWORD: ${{ secrets.SEED_SUPER_ADMIN_PASSWORD }}
        run: |
          php artisan migrate --force --no-interaction --seed
